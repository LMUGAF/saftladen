<slsd>
	<!-- DAEMON -->
	<user>slsd</user>
	<group>slsd</group>
	
	<pidfile mode="666">/tmp/slsd.pid</pidfile>
	<errfile mode="666">/tmp/slsd.err</errfile>
	
	
	
	<!-- LOGGER -->
	<log>
		<file path="/tmp/slsd.log" mode="666">
			<timeformat>%M:%S</timeformat>
			<filter level="*" service="*" log="t" />
		</file>
		
		<stdout>
			<timeformat>%M:%S</timeformat>
			<filter level="Display" service="*" log="t" />
		</stdout>
		
		<syslog>
			<filter level="*" service="*" log="f" />
		</syslog>
	</log>
	
	
	
	<!-- SCANNERS -->
	<stdinscanner />
	
	
	
	<!-- HANDLERS -->
	<!-- cmd:         The path to the executable which sould be executed     -->
	<!-- [timeout]:   Maximal execution time in secons (default=10)          -->
	<!-- {exec}:      Trigger the execution                                  -->
	<exechandler name="exec" cmd="misc/testexec.sh">
		<port name="exec">
			<route domain="exec" />
		</port>
	</exechandler>
	
	
	<!-- {trap0(msg)} - {trap9(msg)}:                                        -->
	<!--              msg and the trigger count of the port will be logged   -->
	<!-- {reset}:     Resets all trigger counts to 0                         -->
	<debughandler name="debug">
		<port name="trap0">
			<route domain="d0" />
		</port>
		
		<port name="trap1">
			<route domain="d1" />
		</port>
		
		<port name="trap2">
			<route domain="d2" />
		</port>
		
		<port name="trap3">
			<route domain="d3" />
		</port>
		
		<port name="trap4">
			<route domain="d4" />
		</port>
		
		<port name="trap5">
			<route domain="d5" />
		</port>
		
		<port name="trap6">
			<route domain="d6" />
		</port>
		
		<port name="trap7">
			<route domain="d7" />
		</port>
		
		<port name="trap8">
			<route domain="d8" />
		</port>
		
		<port name="trap9">
			<route domain="d9" />
		</port>
		
		<port name="reset">
			<route domain="r" />
		</port>
	</debughandler>
	
	
	<!-- host:        The IP or hostname of the MPD server                   -->
	<!-- [service]:   Portnumber or service name of the MPD                  -->
	<!-- {pausePlay}: Toggles between playing and pausing the playlist       -->
	<!-- {next}:      Plays the next song in the playlist                    -->
	<!-- {enqueueFile(file)}:                                                -->
	<!--              Puts file at the end of the playlist and starts        -->
	<!--              playing it                                             -->
	<!-- {enqueueId(id)}:                                                    -->
	<!--              Puts the file with the ID id at the end of the         -->
	<!--              playlist and starts playing it                         -->
	<!-- {enqueueFav(key)}:                                                  -->
	<!--              Puts the file defined by the <fav> with key at the end -->
	<!--              of the playlist and starts playing it                  -->
	<!-- <fav key value>:                                                    -->
	<!--              Defines a favourite for the enqueueFav port. key is    -->
	<!--              the parameter of the port which should enqueu this     -->
	<!--              favourite and has to be unique. If value is numeric,   -->
	<!--              it's the ID of the file, otherwise its the filename.   -->
	<mpdhandler name="mpd" host="mpd">
		<port name="pausePlay">
			<route domain="mpd.pp" />
		</port>
		
		<port name="next">
			<route domain="mpd.next" />
		</port>
		
		<port name="enqueueFile">
			<route domain="mpd.file" />
		</port>
		
		<port name="enqueueId">
			<route domain="mpd.id" />
		</port>
		
		<port name="enqueueFav">
			<route domain="mpd.fav" />
		</port>
		
		<fav key="1" value="some/file.ogg" />
		<fav key="2" value="123" />
	</mpdhandler>
	
	
	<!-- host:        URL of slrest                                          -->
	<!-- {userById(uid)}:                                                    -->
	<!-- {userByName(name)}:                                                 -->
	<!-- {productByEan(ean)}:                                                -->
	<!-- {productByNr(nr)}:                                                  -->
	<!-- {storno}:                                                           -->
	<!-- {withdraw(amount)}:                                                 -->
	<!-- {deposit(amount)}:                                                  -->
	<!-- {logout}:                                                           -->
	<slhandler name="sl" url="https://example.com/saftladen">
		<port name="userById">
			<route domain="000" />
			<route domain="uid " />
		</port>
		
		<port name="userByName">
			<route domain="user " />
		</port>
		
		<port name="productByEan">
			<route domain="" />
		</port>
		
		<port name="productByNr">
			<route domain="001" />
			<route domain="product " />
			<!-- keypad input -->
		</port>
		
		<port name="storno">
			<route domain="002" />
			<route domain="storno" />
		</port>
		
		<port name="withdraw">
			<route domain="003" />
			<route domain="withdraw " />
		</port>
		
		<port name="deposit">
			<route domain="004" />
			<route domain="deposit " />
		</port>
		
		<port name="logout">
			<route domain="005" />
			<route domain="logout" />
		</port>
	</slhandler>
</slsd>
